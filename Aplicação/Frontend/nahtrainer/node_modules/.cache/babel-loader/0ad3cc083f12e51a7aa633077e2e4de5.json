{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Projeto APS\\\\projetoaps\\\\Aplica\\xE7\\xE3o\\\\Frontend\\\\nahtrainer\\\\src\\\\protectedroutes.js\";\nimport React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Routes } from './routes';\n\nconst isAuthenticated = () => {\n  return !!localStorage.getItem('authToken');\n};\n\nconst ProtectedRoutes = () => _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: Routes.Alunos.path,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 28\n          }\n        });\n      } else if (props.location.pathname === Routes.Login.path) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          handleLogin: handleLogin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 28\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: Routes.Login.path,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 28\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ProtectedRoutes;","map":{"version":3,"sources":["C:/Users/aless/OneDrive/Área de Trabalho/Projeto APS/projetoaps/Aplicação/Frontend/nahtrainer/src/protectedroutes.js"],"names":["React","useState","Route","Redirect","Routes","isAuthenticated","localStorage","getItem","ProtectedRoutes","component","Component","rest","props","Alunos","path","location","pathname","Login","handleLogin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1B,SAAO,CAAC,CAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAT;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAG,MAAM,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AACjE,sBACI,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EAAGC,KAAD,IAAW;AACf,UAAIP,eAAJ,EAAqB;AACjB,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAED,MAAM,CAACS,MAAP,CAAcC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO,IAAIF,KAAK,CAACG,QAAN,CAAeC,QAAf,KAA4BZ,MAAM,CAACa,KAAP,CAAaH,IAA7C,EAAmD;AACtD,4BAAO,oBAAC,SAAD,oBAAeF,KAAf;AAAsB,UAAA,WAAW,EAAEM,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,OAFM,MAEA;AACH,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAEd,MAAM,CAACa,KAAP,CAAaH,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAcH,CAfD;;AAiBA,eAAeN,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { Routes } from './routes'\r\n\r\nconst isAuthenticated = () => {\r\n    return !!localStorage.getItem('authToken')\r\n}\r\n\r\nconst ProtectedRoutes = () => ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (isAuthenticated) {\r\n                    return <Redirect to={Routes.Alunos.path} />;\r\n                } else if (props.location.pathname === Routes.Login.path) {\r\n                    return <Component {...props} handleLogin={handleLogin} />;\r\n                } else {\r\n                    return <Redirect to={Routes.Login.path} />;\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoutes;"]},"metadata":{},"sourceType":"module"}