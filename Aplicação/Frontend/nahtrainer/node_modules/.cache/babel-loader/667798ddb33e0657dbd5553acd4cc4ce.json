{"ast":null,"code":"'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n/**\r\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\r\n * of the input\r\n *\r\n * @param {any} rawValue - The value to be stringified.\r\n * @param {Function} parser - A function that parses a string into a JavaScript object.\r\n * @param {Function} encoder - A function that takes a value and returns a string.\r\n *\r\n * @returns {string} A stringified version of the rawValue.\r\n */\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n  transitional: transitionalDefaults,\n  adapter: ['xhr', 'http', 'fetch'],\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(isFileList ? {\n          'files[]': data\n        } : data, _FormData && new _FormData(), this.formSerializer);\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  maxBodyLength: -1,\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], method => {\n  defaults.headers[method] = {};\n});\nexport default defaults;","map":{"version":3,"sources":["C:/Users/beatr/OneDrive/Documentos/Nah Trainer/projetoaps/Aplicação/Frontend/nahtrainer/node_modules/axios/lib/defaults/index.js"],"names":["utils","AxiosError","transitionalDefaults","toFormData","toURLEncodedForm","platform","formDataToJSON","stringifySafely","rawValue","parser","encoder","isString","JSON","parse","trim","e","name","stringify","defaults","transitional","adapter","transformRequest","data","headers","contentType","getContentType","hasJSONContentType","indexOf","isObjectPayload","isObject","isHTMLForm","FormData","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isReadableStream","isArrayBufferView","buffer","isURLSearchParams","setContentType","toString","isFileList","formSerializer","_FormData","env","transformResponse","forcedJSONParsing","JSONRequested","responseType","isResponse","silentJSONParsing","strictJSONParsing","from","ERR_BAD_RESPONSE","response","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","classes","Blob","validateStatus","status","common","undefined","forEach","method"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport utils from '../utils.js';\r\nimport AxiosError from '../core/AxiosError.js';\r\nimport transitionalDefaults from './transitional.js';\r\nimport toFormData from '../helpers/toFormData.js';\r\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\r\nimport platform from '../platform/index.js';\r\nimport formDataToJSON from '../helpers/formDataToJSON.js';\r\n\r\n/**\r\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\r\n * of the input\r\n *\r\n * @param {any} rawValue - The value to be stringified.\r\n * @param {Function} parser - A function that parses a string into a JavaScript object.\r\n * @param {Function} encoder - A function that takes a value and returns a string.\r\n *\r\n * @returns {string} A stringified version of the rawValue.\r\n */\r\nfunction stringifySafely(rawValue, parser, encoder) {\r\n  if (utils.isString(rawValue)) {\r\n    try {\r\n      (parser || JSON.parse)(rawValue);\r\n      return utils.trim(rawValue);\r\n    } catch (e) {\r\n      if (e.name !== 'SyntaxError') {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (encoder || JSON.stringify)(rawValue);\r\n}\r\n\r\nconst defaults = {\r\n\r\n  transitional: transitionalDefaults,\r\n\r\n  adapter: ['xhr', 'http', 'fetch'],\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    const contentType = headers.getContentType() || '';\r\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\r\n    const isObjectPayload = utils.isObject(data);\r\n\r\n    if (isObjectPayload && utils.isHTMLForm(data)) {\r\n      data = new FormData(data);\r\n    }\r\n\r\n    const isFormData = utils.isFormData(data);\r\n\r\n    if (isFormData) {\r\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\r\n    }\r\n\r\n    if (utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data) ||\r\n      utils.isReadableStream(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\r\n      return data.toString();\r\n    }\r\n\r\n    let isFileList;\r\n\r\n    if (isObjectPayload) {\r\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\r\n        return toURLEncodedForm(data, this.formSerializer).toString();\r\n      }\r\n\r\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\r\n        const _FormData = this.env && this.env.FormData;\r\n\r\n        return toFormData(\r\n          isFileList ? {'files[]': data} : data,\r\n          _FormData && new _FormData(),\r\n          this.formSerializer\r\n        );\r\n      }\r\n    }\r\n\r\n    if (isObjectPayload || hasJSONContentType ) {\r\n      headers.setContentType('application/json', false);\r\n      return stringifySafely(data);\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    const transitional = this.transitional || defaults.transitional;\r\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    const JSONRequested = this.responseType === 'json';\r\n\r\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\r\n      return data;\r\n    }\r\n\r\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\r\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\r\n\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  env: {\r\n    FormData: platform.classes.FormData,\r\n    Blob: platform.classes.Blob\r\n  },\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  },\r\n\r\n  headers: {\r\n    common: {\r\n      'Accept': 'application/json, text/plain, */*',\r\n      'Content-Type': undefined\r\n    }\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nexport default defaults;\r\n"]},"metadata":{},"sourceType":"module"}