{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beatr\\\\OneDrive\\\\Documentos\\\\NahTrainer2.0\\\\projeto-aps\\\\Aplica\\xE7\\xE3o\\\\Frontend\\\\nahtrainer\\\\src\\\\components\\\\Charts.js\";\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nexport const SalesValueChart = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-double-octave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n};\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-major-tenth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  });\n};\nexport const CircleChart = props => {\n  const {\n    series = [],\n    donutWidth = 20\n  } = props;\n\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: {\n      series\n    },\n    options: { ...options,\n      plugins\n    },\n    type: \"Pie\",\n    className: \"ct-golden-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  });\n};\nexport const BarChart = props => {\n  const {\n    labels = [],\n    series = [],\n    chartClassName = \"ct-golden-section\"\n  } = props;\n  const data = {\n    labels,\n    series\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Bar\",\n    className: chartClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/beatr/OneDrive/Documentos/NahTrainer2.0/projeto-aps/Aplicação/Frontend/nahtrainer/src/components/Charts.js"],"names":["React","Chartist","ChartistTooltip","SalesValueChart","data","labels","series","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","plugins","SalesValueChartphone","CircleChart","props","donutWidth","sum","a","b","high","donut","donutSolid","Math","round","reduce","BarChart","chartClassName","offset"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport Chartist from \"react-chartist\";\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\r\n\r\nexport const SalesValueChart = () => {\r\n  const data = {\r\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n    series: [[1, 2, 2, 3, 3, 4, 3]]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: true,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `$${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\r\n  );\r\n};\r\n\r\nexport const SalesValueChartphone = () => {\r\n  const data = {\r\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n    series: [[1, 2, 2, 3, 3, 4, 3]]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: false,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `$${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\r\n  );\r\n};\r\n\r\nexport const CircleChart = (props) => {\r\n  const { series = [], donutWidth = 20 } = props;\r\n  const sum = (a, b) => a + b;\r\n\r\n  const options = {\r\n    low: 0,\r\n    high: 8,\r\n    donutWidth,\r\n    donut: true,\r\n    donutSolid: true,\r\n    fullWidth: false,\r\n    showLabel: false,\r\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\r\n  }\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\r\n  );\r\n};\r\n\r\nexport const BarChart = (props) => {\r\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\r\n  const data = { labels, series };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    axisX: {\r\n      position: 'end'\r\n    },\r\n    axisY: {\r\n      showGrid: false,\r\n      showLabel: false,\r\n      offset: 0\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}